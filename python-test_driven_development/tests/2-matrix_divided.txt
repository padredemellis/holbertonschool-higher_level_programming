The ``2-matrix_divided`` module
==============================

Using ``matrix_divided``
-----------------------

Import the function:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test with a normal matrix:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test if the original matrix remains unchanged:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> matrix
    [[1, 2, 3], [4, 5, 6]]

Test with negative numbers:
    >>> matrix = [[-1, -2, -3], [-4, -5, -6]]
    >>> matrix_divided(matrix, 3)
    [[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

Test with a div of 0:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> try:
    ...     matrix_divided(matrix, 0)
    ... except ZeroDivisionError as e:
    ...     print(e)
    division by zero

Test with non-number div:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> try:
    ...     matrix_divided(matrix, "string")
    ... except TypeError as e:
    ...     print(e)
    div must be a number

Test with a non-matrix:
    >>> try:
    ...     matrix_divided("not a matrix", 3)
    ... except TypeError as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats

Test with different row sizes:
    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> try:
    ...     matrix_divided(matrix, 3)
    ... except TypeError as e:
    ...     print(e)
    Each row of the matrix must have the same size

Test with non-number elements:
    >>> matrix = [[1, 2, 3], [4, "string", 6]]
    >>> try:
    ...     matrix_divided(matrix, 3)
    ... except TypeError as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats

Test with float div:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 1.5)
    [[0.67, 1.33, 2.0], [2.67, 3.33, 4.0]]

Test with float numbers in matrix:
    >>> matrix = [[1.1, 2.2, 3.3], [4.4, 5.5, 6.6]]
    >>> matrix_divided(matrix, 2)
    [[0.55, 1.1, 1.65], [2.2, 2.75, 3.3]]

Test with infinity as divisor:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test with missing one argument:
    >>> try:
    ...     matrix_divided([[1, 2, 3]])
    ... except TypeError as e:
    ...     print(e)
    matrix_divided() missing 1 required positional argument: 'div'